/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package client;

import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.plaf.TableHeaderUI;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import org.apache.axis2.client.Stub;
import org.netbeans.j2ee.wsdl.vps.src.vps.VPSServiceStub;
import org.netbeans.j2ee.wsdl.vps.src.vps.VPSServiceStub.*;

/**
 *
 * @author Federico Fregosi
 */
public class ClientUI extends javax.swing.JFrame {

    VPSServiceStub stub;
    DefaultTableModel tm;

    /**
     * Creates new form ClientUI
     */
    public ClientUI() {
        initComponents();
        /*Axis 2 initialization */
        try {

            stub = new VPSServiceStub();
        } catch (Exception e) {
            System.err.println("An Exception has been caught, this is likely related to tomcat or Glassfish configuration"
                    + "please run the VPS service backend on tomcat ");
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AlertsDisplay = new javax.swing.JDialog();
        jDialog2 = new javax.swing.JDialog();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        minpricefield = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        maxpricefield = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        makerfield = new javax.swing.JTextField();
        modelfield = new javax.swing.JTextField();
        registrationyearfield = new javax.swing.JTextField();
        milagefield = new javax.swing.JTextField();
        getstoredresultsbutton = new javax.swing.JButton();
        StoreVehicleSearchButton = new javax.swing.JButton();
        SearchVehicleButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ResultsTable = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        SubmitLoanButton = new javax.swing.JButton();
        StoreLoanSearchResultsButton = new javax.swing.JButton();
        getstoredLoanresultsButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        userfield = new javax.swing.JTextField();
        cardtypefield = new javax.swing.JTextField();
        cardnumberfield = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        AgeField = new javax.swing.JTextField();
        GetLoanButton = new javax.swing.JButton();
        submitOfferButton = new javax.swing.JButton();
        offerfield = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();

        AlertsDisplay.setTitle("HEllo");

        javax.swing.GroupLayout AlertsDisplayLayout = new javax.swing.GroupLayout(AlertsDisplay.getContentPane());
        AlertsDisplay.getContentPane().setLayout(AlertsDisplayLayout);
        AlertsDisplayLayout.setHorizontalGroup(
            AlertsDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        AlertsDisplayLayout.setVerticalGroup(
            AlertsDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog2Layout = new javax.swing.GroupLayout(jDialog2.getContentPane());
        jDialog2.getContentPane().setLayout(jDialog2Layout);
        jDialog2Layout.setHorizontalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog2Layout.setVerticalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Vehicle Purchasing System");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("SearchVehicle"));

        jLabel2.setText("minPrice");

        minpricefield.setText("3000");
        minpricefield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minpricefieldActionPerformed(evt);
            }
        });

        jLabel3.setText("maxPrice");

        maxpricefield.setText("5000");
        maxpricefield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maxpricefieldActionPerformed(evt);
            }
        });

        jLabel4.setText("Maker");

        jLabel5.setText("Model");

        jLabel6.setText("Year of Registration from 1980 to...");

        jLabel7.setText("Milage up to...");

        makerfield.setText("FIAT");

        modelfield.setText("Punto");
        modelfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modelfieldActionPerformed(evt);
            }
        });

        registrationyearfield.setText("2010");

        milagefield.setText("1000");

        getstoredresultsbutton.setText("GetStoredResults");
        getstoredresultsbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getstoredresultsbuttonActionPerformed(evt);
            }
        });

        StoreVehicleSearchButton.setText("StoreVechicleSearchResults");
        StoreVehicleSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StoreVehicleSearchButtonActionPerformed(evt);
            }
        });

        SearchVehicleButton.setText("SearchVehicle");
        SearchVehicleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchVehicleButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel6)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(registrationyearfield))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(minpricefield, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(maxpricefield, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel7)
                            .addGap(53, 53, 53)
                            .addComponent(milagefield, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(modelfield, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                            .addComponent(makerfield))))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(getstoredresultsbutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(StoreVehicleSearchButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SearchVehicleButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {StoreVehicleSearchButton, getstoredresultsbutton});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(minpricefield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(maxpricefield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchVehicleButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(makerfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StoreVehicleSearchButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(modelfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(getstoredresultsbutton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(registrationyearfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(milagefield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Results"));

        ResultsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Price", "Maker", "Model", "Milage", "Year"
            }
        ));
        jScrollPane1.setViewportView(ResultsTable);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 5, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Loan"));

        SubmitLoanButton.setText("SubmitLoanApplication");
        SubmitLoanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitLoanButtonActionPerformed(evt);
            }
        });

        StoreLoanSearchResultsButton.setText("StoreLoanSearchResults");
        StoreLoanSearchResultsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StoreLoanSearchResultsButtonActionPerformed(evt);
            }
        });

        getstoredLoanresultsButton.setText("GetStoredLoanResults");
        getstoredLoanresultsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getstoredLoanresultsButtonActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Details"));

        jLabel8.setText("User");

        jLabel9.setText("Card Type (Visa, Mastercard, Maestro...)");

        jLabel11.setText("Card Number");

        userfield.setText("Student");
        userfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userfieldActionPerformed(evt);
            }
        });
        userfield.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                userfieldFocusLost(evt);
            }
        });

        cardtypefield.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cardtypefieldFocusLost(evt);
            }
        });

        jLabel13.setText("Age");

        AgeField.setText("40");
        AgeField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                AgeFieldFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel9))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(cardtypefield, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(userfield)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(AgeField, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cardnumberfield)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(userfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(AgeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cardtypefield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cardnumberfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        GetLoanButton.setText("GetLoans");
        GetLoanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GetLoanButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(SubmitLoanButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(getstoredLoanresultsButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(StoreLoanSearchResultsButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 269, Short.MAX_VALUE)
                            .addComponent(GetLoanButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 9, Short.MAX_VALUE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(GetLoanButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(StoreLoanSearchResultsButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(getstoredLoanresultsButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SubmitLoanButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        submitOfferButton.setText("SubmitVechicleOffer");
        submitOfferButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitOfferButtonActionPerformed(evt);
            }
        });

        offerfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                offerfieldActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("    Select a row in the results to perform an action on it...");

        jLabel12.setText("Insert Offer");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(279, 279, 279))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(offerfield, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)
                                .addComponent(submitOfferButton)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(offerfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(submitOfferButton))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void StoreVehicleSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StoreVehicleSearchButtonActionPerformed
        //verifing fields completeness
        if (userfield.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter user details in his fields", null, JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        int[] index = ResultsTable.getSelectedRows();
        if (index.length == 0) {
            JOptionPane.showMessageDialog(this, "Select a row in the results table", null, JOptionPane.WARNING_MESSAGE);
            return;
        }
        /* creating the results set to submit based on the selected columns */
        Results res1 = new Results();
        for (int i = 0; i < index.length; i++) {
            Vehicle v1 = new Vehicle();
            v1.setPrice((Integer) ResultsTable.getValueAt(index[i], 0));
            v1.setMaker((String) ResultsTable.getValueAt(index[i], 1));
            long temp = (Long) ResultsTable.getValueAt(index[i], 4);
            v1.setMilage((int) temp);
            v1.setModel((String) ResultsTable.getValueAt(index[i], 2));
            v1.setYearofreg((Integer) ResultsTable.getValueAt(index[i], 3));
            res1.addResultlist(v1);
        }
        try {
            StoreResultsExposed storeresults = new StoreResultsExposed();
            storeresults.setUser(userfield.getText());
            storeresults.setResults(res1);
            StoreResultsExposedResponse storeresponse = stub.storeResultsExposed(storeresults);
            if (storeresponse.getIsstored()) {
                JOptionPane.showMessageDialog(this, "The operation has finished succesfully ", null, JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "The backend server was not able to complete the procedure", null, JOptionPane.ERROR_MESSAGE);
            }

        } catch (Exception e) {
            setAlert();
            System.err.println(e);
        }

    }//GEN-LAST:event_StoreVehicleSearchButtonActionPerformed

    private void submitOfferButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitOfferButtonActionPerformed
        //verifying variable completeness
        if (userfield.getText().isEmpty() || offerfield.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter user  and offer details in their fields", null, JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        int[] index = ResultsTable.getSelectedRows();
        Vehicle v1 = new Vehicle();

        if (!(index.length == 1)) {
            JOptionPane.showMessageDialog(this, "Select a single row in the results table", null, JOptionPane.WARNING_MESSAGE);
            return;
        }
        v1.setPrice((Integer) ResultsTable.getValueAt(index[0], 0));
        v1.setMaker((String) ResultsTable.getValueAt(index[0], 1));
        long temp = (Long) ResultsTable.getValueAt(index[0], 4);
        v1.setMilage((int) temp);
        v1.setModel((String) ResultsTable.getValueAt(index[0], 2));
        v1.setYearofreg((Integer) ResultsTable.getValueAt(index[0], 3));
        SubmitOfferExposed offer = new SubmitOfferExposed();
        offer.setOffer(Integer.parseInt(offerfield.getText()));
        offer.setUser(userfield.getText());
        offer.setVehicle(v1);
        try {
            SubmitOfferExposedResponse offerresponse = stub.submitOfferExposed(offer);
            if (offerresponse.getIsAccepted()) {
                JOptionPane.showMessageDialog(this, "The offer has been accepted ! ", null, JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "The offer has been declined ! ", null, JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            setAlert();
            System.err.println(e);
        }
    }//GEN-LAST:event_submitOfferButtonActionPerformed

    private void minpricefieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minpricefieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_minpricefieldActionPerformed

    private void modelfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modelfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_modelfieldActionPerformed

    private void maxpricefieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maxpricefieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_maxpricefieldActionPerformed

    private void SearchVehicleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchVehicleButtonActionPerformed
        //verifying variable completeness
        if (userfield.getText().isEmpty() || makerfield.getText().isEmpty() || modelfield.getText().isEmpty() || minpricefield.getText().isEmpty() || maxpricefield.getText().isEmpty() || registrationyearfield.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter user details in his fields", null, JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        /* calling the axis2 service */
        SearchVehicle searchparams = new SearchVehicle();
        searchparams.setMaker(makerfield.getText());
        searchparams.setMileage(Integer.parseInt(milagefield.getText()));
        searchparams.setModel(modelfield.getText());
        searchparams.setP1(Integer.parseInt(minpricefield.getText()));
        searchparams.setP2(Integer.parseInt(maxpricefield.getText()));
        searchparams.setYear(Integer.parseInt(registrationyearfield.getText()));
        searchparams.setUser(userfield.getText());
        SearchVehicleExposed search = new SearchVehicleExposed();
        search.setSearchVehicle(searchparams);
        Vehicle[] vehicles = new Vehicle[0];
        /* preparing to update the resultstable */
        tm = new javax.swing.table.DefaultTableModel();
        tm.addColumn("Price");
        tm.addColumn("Maker");
        tm.addColumn("Model");
        tm.addColumn("Year of Registation");
        tm.addColumn("Milage");
        try {
            SearchVehicleExposedResponse searchresponse = stub.searchVehicleExposed(search);
            Results searchresults = searchresponse.getResults();
            vehicles = searchresults.getResultlist();
            for (int i = 0; i < vehicles.length; i++) {
                Vector vect1 = new Vector();
                vect1.add(vehicles[i].getPrice());
                vect1.add(vehicles[i].getMaker());
                vect1.add(vehicles[i].getModel());
                vect1.add(vehicles[i].getYearofreg());
                vect1.add(vehicles[i].getMilage());
                tm.addRow(vect1);
            }
            ResultsTable.setModel(tm);
        } catch (Exception e) {
            setAlert();
            System.err.println(e);
        }
    }//GEN-LAST:event_SearchVehicleButtonActionPerformed

    private void userfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userfieldActionPerformed

    private void offerfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_offerfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_offerfieldActionPerformed

    private void getstoredresultsbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getstoredresultsbuttonActionPerformed
        //verifying variable completeness
        if (userfield.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter user details in his fields", null, JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        GetStoredResultsExposed storedresults = new GetStoredResultsExposed();
        storedresults.setUser(userfield.getText());

        Vehicle[] vehiclesresults = new Vehicle[0];
        System.out.println(vehiclesresults.length);

        try {
            // preparing the table
            tm = new javax.swing.table.DefaultTableModel();
            tm.addColumn("Price");
            tm.addColumn("Maker");
            tm.addColumn("Model");
            tm.addColumn("Year of Registation");
            tm.addColumn("Milage");
            //getting the response
            GetStoredResultsExposedResponse storedresultsresponse = stub.getStoredResultsExposed(storedresults);
            Results resultsresponse = storedresultsresponse.getIsResultsStored();
            vehiclesresults = resultsresponse.getResultlist();
            //writing the table based on the response
            for (int i = 0; i < vehiclesresults.length; i++) {
                Vector vect1 = new Vector();
                vect1.add(vehiclesresults[i].getPrice());
                vect1.add(vehiclesresults[i].getMaker());
                vect1.add(vehiclesresults[i].getModel());
                vect1.add(vehiclesresults[i].getYearofreg());
                vect1.add(vehiclesresults[i].getMilage());
                tm.addRow(vect1);
            }
            ResultsTable.setModel(tm);
        } catch (NullPointerException lange) {
            JOptionPane.showMessageDialog(this, "There are no results for this user", null, JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception e) {
            setAlert();
            e.printStackTrace();
            System.err.println(e);
        }

    }//GEN-LAST:event_getstoredresultsbuttonActionPerformed

    private void StoreLoanSearchResultsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StoreLoanSearchResultsButtonActionPerformed
        //verifying variable completeness
        if (userfield.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter user details in his fields", null, JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        //making sure there is a Loan in the results set
        if (!(ResultsTable.getColumnCount() == 8)) {
            JOptionPane.showMessageDialog(this, "Get the Loans, not the Vehicles, in the results set before asking for a Loan!", null, JOptionPane.WARNING_MESSAGE);
            return;
        }
        int[] index = ResultsTable.getSelectedRows();
        if (index.length == 0) {
            JOptionPane.showMessageDialog(this, "Select one row in the results table", null, JOptionPane.WARNING_MESSAGE);
            return;
        }
        System.out.println(index.length);
        // creating the loans results
        Loan[] loanarray = new Loan[index.length];
        for (int i = 0; i < index.length; i++) {
            Vehicle v1 = new Vehicle();
            v1.setPrice((Integer) ResultsTable.getValueAt(index[i], 0));
            v1.setMaker((String) ResultsTable.getValueAt(index[i], 1));
            long temp = (Long) ResultsTable.getValueAt(index[i], 4);
            v1.setMilage((int) temp);
            v1.setModel((String) ResultsTable.getValueAt(index[i], 2));
            v1.setYearofreg((Integer) ResultsTable.getValueAt(index[i], 3));
            Loan l1 = new Loan();
            l1.setVehicle(v1);
            l1.setBank((String) ResultsTable.getValueAt(index[i], 5));
            l1.setMonths((Integer) ResultsTable.getValueAt(index[i], 6));
            l1.setMonthlyfare((Integer) ResultsTable.getValueAt(index[i], 7));
            loanarray[i] = l1;
        }
        //creating the loans class
        LoanResults loanresults = new LoanResults();
        loanresults.setStoredloans(loanarray);
        //creating the request
        StoreLoansExposed storeloans = new StoreLoansExposed();
        storeloans.setUser(userfield.getText());
        storeloans.setLoans(loanresults);
        try {
            StoreLoansExposedResponse storeloansresponse = stub.storeLoansExposed(storeloans);
            if (storeloansresponse.getResult()) {
                JOptionPane.showMessageDialog(this, "The operation has finished succesfully ", null, JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "The backend server was not able to complete the procedure", null, JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            setAlert();
            System.err.println(e);
        }

    }//GEN-LAST:event_StoreLoanSearchResultsButtonActionPerformed

    private void getstoredLoanresultsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getstoredLoanresultsButtonActionPerformed
        //verifying variable completeness
        if (userfield.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter user details in his fields", null, JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        //creating the query
        GetStoredLoanResultsExposed storedloans = new GetStoredLoanResultsExposed();
        storedloans.setUser(userfield.getText());
        try {
            //getting the results
            GetStoredLoanResultsExposedResponse storedloansresponse = stub.getStoredLoanResultsExposed(storedloans);
            Loan[] loanresults = storedloansresponse.getLoans().getStoredloans();
            //creating the resultss
            tm = new javax.swing.table.DefaultTableModel();
            tm.addColumn("Price");
            tm.addColumn("Maker");
            tm.addColumn("Model");
            tm.addColumn("Year of Registation");
            tm.addColumn("Milage");
            tm.addColumn("Bank");
            tm.addColumn("Months");
            tm.addColumn("MonthlyFare");
            for (int i = 0; i < loanresults.length; i++) {
                Vector vect1 = new Vector();
                vect1.add(loanresults[i].getVehicle().getPrice());
                vect1.add(loanresults[i].getVehicle().getMaker());
                vect1.add(loanresults[i].getVehicle().getModel());
                vect1.add(loanresults[i].getVehicle().getYearofreg());
                vect1.add(loanresults[i].getVehicle().getMilage());
                vect1.add(loanresults[i].getBank());
                vect1.add(loanresults[i].getMonths());
                vect1.add(loanresults[i].getMonthlyfare());
                tm.addRow(vect1);
            }
            ResultsTable.setModel(tm);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "There are no stored Loans for this user", null, JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_getstoredLoanresultsButtonActionPerformed

    private void SubmitLoanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitLoanButtonActionPerformed
        //verifing fields completeness
        if (userfield.getText().isEmpty() || cardnumberfield.getText().isEmpty() || cardtypefield.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter user and credit details in their fields", null, JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        //acquiring selected row
        int[] index = ResultsTable.getSelectedRows();
        if (!(index.length == 1)) {
            JOptionPane.showMessageDialog(this, "Select one row in the results table", null, JOptionPane.WARNING_MESSAGE);
            return;
        }
        //making sure there is a Loan in the results set
        if (!(ResultsTable.getColumnCount() == 8)) {
            JOptionPane.showMessageDialog(this, "Get the Loans, not the Vehicles, in the results set before asking for a Loan!", null, JOptionPane.WARNING_MESSAGE);
            return;
        }

        //setting card details
        ValidateCardNumber carddetails = new ValidateCardNumber();
        carddetails.setCardNumber(cardnumberfield.getText());
        carddetails.setCardType(cardtypefield.getText());
        //creating the Loan object
        Vehicle v1 = new Vehicle();
        v1.setPrice((Integer) ResultsTable.getValueAt(index[0], 0));
        v1.setMaker((String) ResultsTable.getValueAt(index[0], 1));
        long temp = (Long) ResultsTable.getValueAt(index[0], 4);
        v1.setMilage((int) temp);
        v1.setModel((String) ResultsTable.getValueAt(index[0], 2));
        v1.setYearofreg((Integer) ResultsTable.getValueAt(index[0], 3));
        Loan l1 = new Loan();
        l1.setVehicle(v1);
        l1.setBank((String) ResultsTable.getValueAt(index[0], 5));
        l1.setMonths((Integer) ResultsTable.getValueAt(index[0], 6));
        l1.setMonthlyfare((Integer) ResultsTable.getValueAt(index[0], 7));
        //creating the request
        SubmitLoanApplicationExposed submitloan = new SubmitLoanApplicationExposed();
        submitloan.setUser(userfield.getText());
        submitloan.setCardDetails(carddetails);
        submitloan.setLoan(l1);
        //sending the request
        try {
            SubmitLoanApplicationExposedResponse loanresponse = stub.submitLoanApplicationExposed(submitloan);
            if (loanresponse.getIsSubmitted()) {
                JOptionPane.showMessageDialog(this, "The Loan Application has been submitted succesfully ", null, JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "The backend server was not able to complete the procedure, likely it is a CARD VALIDATION FAILED", "CARD VALIDATION FAILED", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            setAlert();
            System.err.println(e);
        }
    }//GEN-LAST:event_SubmitLoanButtonActionPerformed

    private void GetLoanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GetLoanButtonActionPerformed
        //verifying variable completeness
        if (userfield.getText().isEmpty() || AgeField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter username and age in their fields", null, JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        // setting the variables
        int[] index = ResultsTable.getSelectedRows();
        Vehicle v1 = new Vehicle();

        if (!(index.length == 1)) {
            JOptionPane.showMessageDialog(this, "Select a single row in the results table", null, JOptionPane.WARNING_MESSAGE);
            return;
        }
        //creating the vehicle
        v1.setPrice((Integer) ResultsTable.getValueAt(index[0], 0));
        v1.setMaker((String) ResultsTable.getValueAt(index[0], 1));
        long temp = (Long) ResultsTable.getValueAt(index[0], 4);
        v1.setMilage((int) temp);
        v1.setModel((String) ResultsTable.getValueAt(index[0], 2));
        v1.setYearofreg((Integer) ResultsTable.getValueAt(index[0], 3));
        //creating the request
        GetLoanSearchExposed getloans = new GetLoanSearchExposed();
        getloans.setUser(userfield.getText());
        getloans.setAge(Integer.parseInt(AgeField.getText()));
        getloans.setVehicle(v1);
        try {
            GetLoanSearchExposedResponse getloansresponse = stub.getLoanSearchExposed(getloans);
            //getting the loanresults
            Loan[] loanresults = getloansresponse.getLoanresults().getStoredloans();
            tm = new javax.swing.table.DefaultTableModel();
            tm.addColumn("Price");
            tm.addColumn("Maker");
            tm.addColumn("Model");
            tm.addColumn("Year of Registation");
            tm.addColumn("Milage");
            tm.addColumn("Bank");
            tm.addColumn("Months");
            tm.addColumn("MonthlyFare");
            for (int i = 0; i < loanresults.length; i++) {
                Vector vect1 = new Vector();
                vect1.add(loanresults[i].getVehicle().getPrice());
                vect1.add(loanresults[i].getVehicle().getMaker());
                vect1.add(loanresults[i].getVehicle().getModel());
                vect1.add(loanresults[i].getVehicle().getYearofreg());
                vect1.add(loanresults[i].getVehicle().getMilage());
                vect1.add(loanresults[i].getBank());
                vect1.add(loanresults[i].getMonths());
                vect1.add(loanresults[i].getMonthlyfare());
                tm.addRow(vect1);
            }
            ResultsTable.setModel(tm);
        } catch (Exception e) {
            setAlert();
            System.err.println(e);
        }
    }//GEN-LAST:event_GetLoanButtonActionPerformed

    private void cardtypefieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cardtypefieldFocusLost
        cardtypefield.setText(cardtypefield.getText().toUpperCase());
    }//GEN-LAST:event_cardtypefieldFocusLost

    private void userfieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_userfieldFocusLost
        if (userfield.getText().isEmpty()) {
            userfield.setText("Username");
            JOptionPane.showMessageDialog(this, "Enter user details in the field", null, JOptionPane.INFORMATION_MESSAGE);
            return;
        }
    }//GEN-LAST:event_userfieldFocusLost

    private void AgeFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_AgeFieldFocusLost
        if (AgeField.getText().isEmpty() || Integer.parseInt(AgeField.getText()) < 18) {
            JOptionPane.showMessageDialog(this, "Each user must be over 18 years old", null, JOptionPane.INFORMATION_MESSAGE);
            AgeField.setText("18");
            return;
        }
    }//GEN-LAST:event_AgeFieldFocusLost

    public void setAlert() {
        JOptionPane.showMessageDialog(this, "The operation has failed: check if Tomcat is running and the service is deployed on Glassfish\n and if the input you provided is correct", "Check Your Connection", JOptionPane.ERROR_MESSAGE);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClientUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AgeField;
    private javax.swing.JDialog AlertsDisplay;
    private javax.swing.JButton GetLoanButton;
    private javax.swing.JTable ResultsTable;
    private javax.swing.JButton SearchVehicleButton;
    private javax.swing.JButton StoreLoanSearchResultsButton;
    private javax.swing.JButton StoreVehicleSearchButton;
    private javax.swing.JButton SubmitLoanButton;
    private javax.swing.JTextField cardnumberfield;
    private javax.swing.JTextField cardtypefield;
    private javax.swing.JButton getstoredLoanresultsButton;
    private javax.swing.JButton getstoredresultsbutton;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField makerfield;
    private javax.swing.JTextField maxpricefield;
    private javax.swing.JTextField milagefield;
    private javax.swing.JTextField minpricefield;
    private javax.swing.JTextField modelfield;
    private javax.swing.JTextField offerfield;
    private javax.swing.JTextField registrationyearfield;
    private javax.swing.JButton submitOfferButton;
    private javax.swing.JTextField userfield;
    // End of variables declaration//GEN-END:variables
}
